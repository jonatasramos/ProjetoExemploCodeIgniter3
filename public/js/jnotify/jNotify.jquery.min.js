(function(e) {
    e.jNotify = {
        defaults: {
            autoHide: true,
            clickOverlay: false,
            MinWidth: 200,
            TimeShown: 1500,
            ShowTimeEffect: 200,
            HideTimeEffect: 200,
            LongTrip: 0,
            HorizontalPosition: "center",
            VerticalPosition: "top",
            ShowOverlay: true,
            ColorOverlay: "#000",
            OpacityOverlay: .3,
            onClosed: null,
            onCompleted: null
        },
        init: function(t, n, r) {
            opts = e.extend({}, e.jNotify.defaults, n);
            if (e("#" + r).length == 0) $Div = e.jNotify._construct(r, t);
            WidthDoc = parseInt(e(window).width());
            HeightDoc = parseInt(e(window).height());
            ScrollTop = parseInt(e(window).scrollTop());
            ScrollLeft = parseInt(e(window).scrollLeft());
            posTop = e.jNotify.vPos(opts.VerticalPosition);
            posLeft = e.jNotify.hPos(opts.HorizontalPosition);
            if (opts.ShowOverlay && e("#jOverlay").length == 0) e.jNotify._showOverlay($Div);
            e.jNotify._show(t)
        },
        _construct: function(t, n) {
            $Div = e('<div id="' + t + '"/>').css({
                opacity: 0,
                minWidth: opts.MinWidth
            }).html(n).appendTo("body");
            return $Div
        },
        vPos: function(e) {
            switch (e) {
                case "top":
                    var t = ScrollTop + parseInt($Div.outerHeight(true) / 2);
                    break;
                case "center":
                    var t = ScrollTop + HeightDoc / 2 - parseInt($Div.outerHeight(true)) / 2;
                    break;
                case "bottom":
                    var t = ScrollTop + HeightDoc - parseInt($Div.outerHeight(true));
                    break
            }
            return t
        },
        hPos: function(e) {
            switch (e) {
                case "left":
                    var t = ScrollLeft;
                    break;
                case "center":
                    var t = ScrollLeft + WidthDoc / 2 - parseInt($Div.outerWidth(true)) / 2;
                    break;
                case "right":
                    var t = ScrollLeft + WidthDoc - parseInt($Div.outerWidth(true));
                    break
            }
            return t
        },
        _show: function(t) {
            $Div.css({
                top: posTop,
                left: posLeft
            });
            switch (opts.VerticalPosition) {
                case "top":
                    $Div.animate({
                        top: posTop + opts.LongTrip,
                        opacity: 1
                    }, opts.ShowTimeEffect, function() {
                        if (opts.onCompleted) opts.onCompleted()
                    });
                    if (opts.autoHide) e.jNotify._close();
                    else $Div.css("cursor", "pointer").click(function(t) {
                        e.jNotify._close()
                    });
                    break;
                case "center":
                    $Div.animate({
                        opacity: 1
                    }, opts.ShowTimeEffect, function() {
                        if (opts.onCompleted) opts.onCompleted()
                    });
                    if (opts.autoHide) e.jNotify._close();
                    else $Div.css("cursor", "pointer").click(function(t) {
                        e.jNotify._close()
                    });
                    break;
                case "bottom":
                    $Div.animate({
                        top: posTop - opts.LongTrip,
                        opacity: 1
                    }, opts.ShowTimeEffect, function() {
                        if (opts.onCompleted) opts.onCompleted()
                    });
                    if (opts.autoHide) e.jNotify._close();
                    else $Div.css("cursor", "pointer").click(function(t) {
                        e.jNotify._close()
                    });
                    break
            }
        },
        _showOverlay: function(t) {
            var n = e('<div id="jOverlay" />').css({
                backgroundColor: opts.ColorOverlay,
                opacity: opts.OpacityOverlay
            }).appendTo("body").show();
            if (opts.clickOverlay) n.click(function(t) {
                t.preventDefault();
                opts.TimeShown = 0;
                e.jNotify._close()
            })
        },
        _close: function() {
            switch (opts.VerticalPosition) {
                case "top":
                    if (!opts.autoHide) opts.TimeShown = 0;
                    $Div.stop(true, true).delay(opts.TimeShown).animate({
                        top: posTop - opts.LongTrip,
                        opacity: 0
                    }, opts.HideTimeEffect, function() {
                        e(this).remove();
                        if (opts.ShowOverlay && e("#jOverlay").length > 0) e("#jOverlay").remove();
                        if (opts.onClosed) opts.onClosed()
                    });
                    break;
                case "center":
                    if (!opts.autoHide) opts.TimeShown = 0;
                    $Div.stop(true, true).delay(opts.TimeShown).animate({
                        opacity: 0
                    }, opts.HideTimeEffect, function() {
                        e(this).remove();
                        if (opts.ShowOverlay && e("#jOverlay").length > 0) e("#jOverlay").remove();
                        if (opts.onClosed) opts.onClosed()
                    });
                    break;
                case "bottom":
                    if (!opts.autoHide) opts.TimeShown = 0;
                    $Div.stop(true, true).delay(opts.TimeShown).animate({
                        top: posTop + opts.LongTrip,
                        opacity: 0
                    }, opts.HideTimeEffect, function() {
                        e(this).remove();
                        if (opts.ShowOverlay && e("#jOverlay").length > 0) e("#jOverlay").remove();
                        if (opts.onClosed) opts.onClosed()
                    });
                    break
            }
        },
        _isReadable: function(t) {
            if (e("#" + t).length > 0) return false;
            else return true
        }
    };
    jNotify = function(t, n) {
        if (e.jNotify._isReadable("jNotify")) e.jNotify.init(t, n, "jNotify")
    };
    jSuccess = function(t, n) {
        if (e.jNotify._isReadable("jSuccess")) e.jNotify.init(t, n, "jSuccess")
    };
    jError = function(t, n) {
        if (e.jNotify._isReadable("jError")) e.jNotify.init(t, n, "jError")
    }
})(jQuery)